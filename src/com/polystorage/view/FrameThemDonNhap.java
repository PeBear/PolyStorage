package com.polystorage.view;

import com.polystorage.dao.ChiTietDonNhapDAOImpl;
import com.polystorage.dao.ChiTietKhoDAOImpl;
import com.polystorage.dao.DonNhapDAOImpl;
import com.polystorage.dao.KhoDAOImpl;
import com.polystorage.dao.NhaCungCapDAOImpl;
import com.polystorage.dao.NhanVienDAOImpl;
import com.polystorage.dao.SanPhamDAOImpl;
import com.polystorage.entity.ChiTietDonNhap;
import com.polystorage.entity.ChiTietDonNhapId;
import com.polystorage.entity.ChiTietKho;
import com.polystorage.entity.ChiTietKhoId;
import com.polystorage.entity.DonNhap;
import com.polystorage.entity.Kho;
import com.polystorage.entity.NhaCungCap;
import com.polystorage.entity.NhanVien;
import com.polystorage.entity.SanPham;
import com.polystorage.helper.DialogHelper;
import java.awt.Cursor;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author xPeter
 */
public class FrameThemDonNhap extends javax.swing.JFrame {

    /**
     * Creates new form FrameUpdate
     */
    public FrameThemDonNhap(DonNhap donNhap) {
        initComponents();
        setLocationRelativeTo(null);
        this.fillToNhaCC();
        this.fillToSanPham();
        this.fillToNhanVien();
        this.fillToKho();
        if (donNhap != null) {
            lblChucNang.setText("CẬP NHẬT");
            maDN = donNhap.getMaDN();
            this.donNhap = donNhap;
            isAddDonNhap = true;
            this.showDetailDonNhap();
        } else {
            maDN = donNhapDAOImpl.getNextId();
            txtMaDN.setText(String.valueOf(maDN));
            txtNgayNhap.setDate(new Date());
        }
        this.fillToChiTietDonNhap();
        this.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        lblChucNang = new javax.swing.JLabel();
        pnlCenter = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaDN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboKho = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboNhaCungCap = new javax.swing.JComboBox<>();
        cboNhanVien = new javax.swing.JComboBox<>();
        txtNgayNhap = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cboSanPham = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnThemSanPham = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblChiTietDonNhap = new javax.swing.JTable();
        pnlControl = new javax.swing.JPanel();
        btnSave = new javax.swing.JLabel();
        btnCancel = new javax.swing.JLabel();
        btnXacNhanDon = new javax.swing.JButton();
        lblXacNhan = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 145, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Đơn Nhập");

        lblChucNang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblChucNang.setForeground(new java.awt.Color(0, 145, 255));
        lblChucNang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChucNang.setText("THÊM MỚI");

        pnlCenter.setBackground(new java.awt.Color(255, 255, 255));
        pnlCenter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Mã Đơn Nhập:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Nhân Viên:");

        txtMaDN.setEditable(false);
        txtMaDN.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Kho:");

        cboKho.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Nhà Cung Cấp:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Ghi Chú:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Ngày Nhập:");

        cboNhaCungCap.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cboNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNhaCungCapActionPerformed(evt);
            }
        });

        cboNhanVien.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        txtNgayNhap.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Sản Phẩm: ");

        cboSanPham.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("Số Lượng:");

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        btnThemSanPham.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnThemSanPham.setText("Thêm Sản Phẩm");
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Danh Sách Sản Phẩm: ");

        tblChiTietDonNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Đơn Giá", "Xóa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblChiTietDonNhap);

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addComponent(cboNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cboKho, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMaDN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .addGap(36, 36, 36)
                                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboNhanVien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jScrollPane1)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(619, 619, 619))
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(pnlCenterLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThemSanPham)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaDN)
                    .addComponent(jLabel4)
                    .addComponent(cboNhanVien))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cboKho)
                        .addComponent(jLabel8))
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboNhaCungCap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cboSanPham)
                    .addComponent(jLabel10)
                    .addComponent(txtSoLuong)
                    .addComponent(btnThemSanPham))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlControl.setBackground(new java.awt.Color(102, 255, 204));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/button_luu.png"))); // NOI18N
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/button_huy(1).png"))); // NOI18N
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });

        btnXacNhanDon.setBackground(new java.awt.Color(255, 255, 255));
        btnXacNhanDon.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnXacNhanDon.setForeground(new java.awt.Color(255, 51, 51));
        btnXacNhanDon.setText("Xác Nhận Đơn");
        btnXacNhanDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlLayout = new javax.swing.GroupLayout(pnlControl);
        pnlControl.setLayout(pnlControlLayout);
        pnlControlLayout.setHorizontalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnXacNhanDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        pnlControlLayout.setVerticalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXacNhanDon)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblXacNhan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblXacNhan.setForeground(new java.awt.Color(255, 51, 51));
        lblXacNhan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addComponent(lblChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(433, 433, 433)
                        .addComponent(lblXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlControl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addComponent(lblChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnCancelMouseClicked

    private void cboNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboNhaCungCapActionPerformed

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPhamActionPerformed
        String loi = this.checkInput();
        if (loi.equals("")) {
            if (isAddDonNhap == false) {
                donNhap = this.getDonNhap();
                if (donNhapDAOImpl.insertDonNhap(donNhap)) {
                    DialogHelper.showMessageDialog(this, "Thêm đơn hàng thành công.");
                    isAddDonNhap = true;
                    PanelDanhSachDonNhap.reload.fillToTableDonHang(-1);
                } else {
                    DialogHelper.showMessageDialog(this, "Thêm đơn hàng thất bại.");
                }
            }
            boolean ok = true;
            ChiTietDonNhap chiTietDonNhap = this.getChiTietDonNhap();
            for (ChiTietDonNhap x : listChiTietDonNhap) {
                if (chiTietDonNhap.getSanPham().getMaSp().equals(x.getSanPham().getMaSp())) {
                    ok = false;
                    break;
                } else {
                    ok = true;
                }
            }
            if (ok) {
                chiTietDonNhapDAOImpl.insertChiTietDonNhap(chiTietDonNhap);
                this.fillToChiTietDonNhap();
            } else {
                DialogHelper.showMessageDialog(this, "Sản phẩm đã có trong danh sách");
            }
        } else {
            DialogHelper.showMessageDialog(this, loi);
        }
    }//GEN-LAST:event_btnThemSanPhamActionPerformed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked

        if (isAddDonNhap == false) {
            donNhap = this.getDonNhap();
            if (donNhapDAOImpl.insertDonNhap(donNhap)) {
                DialogHelper.showMessageDialog(this, "Thêm đơn hàng thành công.");
                isAddDonNhap = true;
                this.fillToChiTietDonNhap();
                PanelDanhSachDonNhap.reload.fillToTableDonHang(-1);
            } else {
                DialogHelper.showMessageDialog(this, "Thêm đơn hàng thất bại.");
            }
        }
        this.updateChiTietDonNhap();


    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnXacNhanDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanDonActionPerformed
        this.xacNhanDon();
    }//GEN-LAST:event_btnXacNhanDonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameThemDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameThemDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameThemDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameThemDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameThemDonNhap(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCancel;
    private javax.swing.JLabel btnSave;
    private javax.swing.JButton btnThemSanPham;
    private javax.swing.JButton btnXacNhanDon;
    private javax.swing.JComboBox<String> cboKho;
    private javax.swing.JComboBox<String> cboNhaCungCap;
    private javax.swing.JComboBox<String> cboNhanVien;
    private javax.swing.JComboBox<String> cboSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblChucNang;
    private javax.swing.JLabel lblXacNhan;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JTable tblChiTietDonNhap;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaDN;
    private com.toedter.calendar.JDateChooser txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
    int maDN;
    DonNhap donNhap;
    NhaCungCapDAOImpl nhaCungCapDAOImpl = new NhaCungCapDAOImpl();
    SanPhamDAOImpl sanPhamDAOImpl = new SanPhamDAOImpl();
    NhanVienDAOImpl nhanVienDAOImpl = new NhanVienDAOImpl();
    KhoDAOImpl khoDAOImpl = new KhoDAOImpl();
    ChiTietKhoDAOImpl chiTietKhoDAOImpl = new ChiTietKhoDAOImpl();
    ChiTietDonNhapDAOImpl chiTietDonNhapDAOImpl = new ChiTietDonNhapDAOImpl();
    DonNhapDAOImpl donNhapDAOImpl = new DonNhapDAOImpl();

    List<ChiTietDonNhap> listChiTietDonNhap;
    boolean isAddDonNhap = false; //kiem tra da add don nhap chua

    private void showDetailDonNhap() {
        DonNhap donNhap = donNhapDAOImpl.getInfoDonNhap(maDN);
        txtMaDN.setText(donNhap.getMaDN().toString());
        txtGhiChu.setText(donNhap.getGhiChu());
        cboNhaCungCap.setSelectedItem("(" + donNhap.getNhaCungCap().getMaNCC() + ") " + donNhap.getNhaCungCap().getTenNCC());
        cboKho.setSelectedItem(donNhap.getKho().getMaKho());
        txtNgayNhap.setDate(donNhap.getNgayNhap());
        if (donNhap.isTrangThai()) {
            lblXacNhan.setText("ĐÃ XÁC NHẬN");
            btnXacNhanDon.setEnabled(false);
        } else {
            lblXacNhan.setText("ĐANG CHỜ");
        }
    }

    private void fillToNhaCC() {
        List<NhaCungCap> list = nhaCungCapDAOImpl.getListNhaCungCap(null);
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNhaCungCap.getModel();
        model.removeAllElements();
        for (NhaCungCap x : list) {
            model.addElement("(" + x.getMaNCC() + ") " + x.getTenNCC());
        }
        cboNhaCungCap.setSelectedIndex(0);
    }

    private void fillToSanPham() {
        List<SanPham> list = sanPhamDAOImpl.getListSanPham(null);
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboSanPham.getModel();
        model.removeAllElements();
        for (SanPham x : list) {
            model.addElement("(" + x.getMaSp() + ") " + x.getTenSp());
        }
        cboSanPham.setSelectedIndex(0);
    }

    private void fillToNhanVien() {
        List<NhanVien> list = nhanVienDAOImpl.getListNhanVien(null);
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNhanVien.getModel();
        model.removeAllElements();
        for (NhanVien x : list) {
            model.addElement(x.getMaNv());
        }
        cboSanPham.setSelectedIndex(0);
    }

    private void fillToKho() {
        List<Kho> list = khoDAOImpl.getListKho();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKho.getModel();
        model.removeAllElements();
        for (Kho x : list) {
            model.addElement(x.getMaKho());
        }
        cboKho.setSelectedIndex(0);
    }

    private void fillToChiTietDonNhap() {
        listChiTietDonNhap = chiTietDonNhapDAOImpl.getListChiTietDonNhap(maDN);
        if (listChiTietDonNhap != null) {
            DefaultTableModel model = (DefaultTableModel) tblChiTietDonNhap.getModel();
            model.setRowCount(0);
            for (ChiTietDonNhap x : listChiTietDonNhap) {
                SanPham sanPham = x.getSanPham();
                Object[] row = new Object[]{sanPham.getMaSp(), sanPham.getTenSp(), x.getSoLuong(), sanPham.getGiaDv(), false};
                model.addRow(row);
            }
        }
    }

    private DonNhap getDonNhap() {
        String maKho = cboKho.getSelectedItem().toString();
        Kho kho = khoDAOImpl.getInfoKho(maKho);
        String ncc = cboNhaCungCap.getSelectedItem().toString();
        NhaCungCap nhaCungCap = nhaCungCapDAOImpl.getInfoNhaCungCap(ncc.substring(1, ncc.lastIndexOf(")")));
        NhanVien nhanVien = nhanVienDAOImpl.getInfoNhanVien("ADMIN");
        Date ngayNhap = txtNgayNhap.getDate();
        DonNhap donNhap = new DonNhap(kho, nhaCungCap, nhanVien, ngayNhap, false);
        return donNhap;
    }

    private ChiTietDonNhap getChiTietDonNhap() {
        String maSP = cboSanPham.getSelectedItem().toString();
        SanPham sanPham = sanPhamDAOImpl.getInfoSanPham(maSP.substring(1, maSP.indexOf(")")));
        int soLuong = Integer.parseInt(txtSoLuong.getText());
        ChiTietDonNhapId chiTietDonNhapId = new ChiTietDonNhapId(maDN, maSP.substring(1, maSP.indexOf(")")));
        ChiTietDonNhap chiTietDonNhap = new ChiTietDonNhap(chiTietDonNhapId, donNhap, sanPham, soLuong);
        return chiTietDonNhap;
    }

    private void updateChiTietDonNhap() {
        chiTietDonNhapDAOImpl.deleteChiTietDonNhap(maDN);
        int rows = tblChiTietDonNhap.getRowCount();
        for (int i = 0; i < rows; i++) {
            boolean xoa = (boolean) tblChiTietDonNhap.getValueAt(i, 4);
            if (xoa) {
                continue;
            }
            DonNhap donNhap = donNhapDAOImpl.getInfoDonNhap(maDN);
            String maSP = tblChiTietDonNhap.getValueAt(i, 0).toString();
            SanPham sanPham = sanPhamDAOImpl.getInfoSanPham(maSP);
            int soLuong = Integer.parseInt(tblChiTietDonNhap.getValueAt(i, 2).toString());
            ChiTietDonNhapId chiTietDonNhapId = new ChiTietDonNhapId(maDN, maSP);
            ChiTietDonNhap chiTietDonNhap = new ChiTietDonNhap(chiTietDonNhapId, donNhap, sanPham, soLuong);
            chiTietDonNhapDAOImpl.insertChiTietDonNhap(chiTietDonNhap);
        }
        this.fillToChiTietDonNhap();
        DialogHelper.showMessageDialog(this, "Lưu thành công");
    }

    private String checkInput() {
        try {
            int soLuong = Integer.parseInt(txtSoLuong.getText());
        } catch (Exception e) {
            return "Sai định dạng số lượng";
        }
        return "";
    }

    private void updateUI() {
        btnCancel.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnSave.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    private void xacNhanDon() {
        boolean ok = true;
        String maKho = cboKho.getSelectedItem().toString();
        int check = JOptionPane.showConfirmDialog(this, "Xác nhận đơn hàng " + maDN + " vào kho " + maKho, "Bạn muốn xác nhận?", JOptionPane.YES_NO_OPTION);
        if (check == 0) {
            for (ChiTietDonNhap x : listChiTietDonNhap) {
                SanPham sanPham = x.getSanPham();
                Kho kho = khoDAOImpl.getInfoKho(maKho);
                ChiTietKhoId chiTietKhoId = new ChiTietKhoId(maKho, sanPham.getMaSp());
                int soLuong = x.getSoLuong();
                System.out.println("soLuong old " + soLuong);
                ChiTietKho chiTietKho = chiTietKhoDAOImpl.getInfoChiTietKho(chiTietKhoId);
                if (chiTietKho == null) {
                    chiTietKho = new ChiTietKho(chiTietKhoId, kho, sanPham, soLuong);
                    if (!chiTietKhoDAOImpl.insertChiTietKho(chiTietKho)) {
                        ok = false;
                    }
                } else {
                    soLuong += chiTietKho.getSoLuong();
                    chiTietKho.setSoLuong(soLuong);
                    if (!chiTietKhoDAOImpl.updateChiTietKho(chiTietKho)) {
                        ok = false;
                    }
                }
            }
            if (ok) {
                donNhap.setTrangThai(true);
                donNhapDAOImpl.updateDonNhap(donNhap);
                DialogHelper.showMessageDialog(this, "Xác nhận đơn hàng thành công");
                btnXacNhanDon.setEnabled(false);
                this.showDetailDonNhap();
            } else {
                DialogHelper.showMessageDialog(this, "Xác nhận đơn hàng thất bại");
            }
        }
    }
}
