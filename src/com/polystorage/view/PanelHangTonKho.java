package com.polystorage.view;

import com.polystorage.dao.ChiTietKhoDAOImpl;
import com.polystorage.dao.DonNhapDAOImpl;
import com.polystorage.dao.KhoDAOImpl;
import com.polystorage.entity.ChiTietKho;
import com.polystorage.entity.DonNhap;
import com.polystorage.entity.Kho;
import com.polystorage.entity.SanPham;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author xPeter
 */
public class PanelHangTonKho extends javax.swing.JPanel {

    public static PanelHangTonKho reload;

    /**
     * Creates new form NewJPanel
     */
    public PanelHangTonKho() {
        reload = this;
        initComponents();
        this.setTableUI();
        this.fillToComboBoxKho();
        this.fillToTableTonKho(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlControl = new javax.swing.JPanel();
        btnThemNhanVien = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboMaKho = new javax.swing.JComboBox<>();
        pnlRoot = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTonKho = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlControl.setBackground(new java.awt.Color(255, 255, 255));

        btnThemNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/button(4).png"))); // NOI18N
        btnThemNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemNhanVienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemNhanVienMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Kho:");

        cboMaKho.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cboMaKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaKhoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlControlLayout = new javax.swing.GroupLayout(pnlControl);
        pnlControl.setLayout(pnlControlLayout);
        pnlControlLayout.setHorizontalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMaKho, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemNhanVien)
                .addContainerGap())
        );
        pnlControlLayout.setVerticalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cboMaKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnThemNhanVien))
                .addGap(12, 12, 12))
        );

        pnlRoot.setBackground(new java.awt.Color(35, 124, 196));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("     TỒN KHO");

        tblTonKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTonKho.setFocusable(false);
        tblTonKho.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblTonKho.setRowHeight(25);
        tblTonKho.setSelectionBackground(new java.awt.Color(130, 168, 212));
        tblTonKho.setShowVerticalLines(false);
        tblTonKho.getTableHeader().setReorderingAllowed(false);
        tblTonKho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTonKhoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTonKho);

        javax.swing.GroupLayout pnlRootLayout = new javax.swing.GroupLayout(pnlRoot);
        pnlRoot.setLayout(pnlRootLayout);
        pnlRootLayout.setHorizontalGroup(
            pnlRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlRootLayout.setVerticalGroup(
            pnlRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRootLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemNhanVienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemNhanVienMouseExited
        btnThemNhanVien.setIcon(new ImageIcon(getClass().getResource("/icon/button_them_moi.png")));
    }//GEN-LAST:event_btnThemNhanVienMouseExited

    private void btnThemNhanVienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemNhanVienMouseEntered
        btnThemNhanVien.setIcon(new ImageIcon(getClass().getResource("/icon/button_them_moi(2).png")));
        btnThemNhanVien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnThemNhanVienMouseEntered

    private void tblTonKhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTonKhoMouseClicked

    }//GEN-LAST:event_tblTonKhoMouseClicked

    private void cboMaKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaKhoItemStateChanged
        String maKho = cboMaKho.getSelectedItem().toString();
        this.fillToTableTonKho(maKho);
    }//GEN-LAST:event_cboMaKhoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnThemNhanVien;
    private javax.swing.JComboBox<String> cboMaKho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JPanel pnlRoot;
    private javax.swing.JTable tblTonKho;
    // End of variables declaration//GEN-END:variables
    List<ChiTietKho> list;
    int index = 0;
    KhoDAOImpl khoDAOImpl = new KhoDAOImpl();
    ChiTietKhoDAOImpl chiTietKhoDAOImpl = new ChiTietKhoDAOImpl();

    private void setTableUI() {
        tblTonKho.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        tblTonKho.getTableHeader().setOpaque(false);
        //tblNhanVien.getTableHeader().setBackground(new Color(32, 136, 203));
        tblTonKho.getTableHeader().setBackground(new Color(255, 255, 255));
        tblTonKho.getTableHeader().setForeground(new Color(0, 0, 0));
        tblTonKho.setRowHeight(25);
    }

    public void fillToComboBoxKho() {
        List<Kho> list = khoDAOImpl.getListKho();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaKho.getModel();
        model.removeAllElements();
        for (Kho x : list) {
            model.addElement(x.getMaKho());
        }
        cboMaKho.setSelectedIndex(0);
    }

    public void fillToTableTonKho(String maKho) {
        list = chiTietKhoDAOImpl.getListChiTietKho(maKho);
        if (list != null) {
            DefaultTableModel model = (DefaultTableModel) tblTonKho.getModel();
            model.setRowCount(0);
            for (ChiTietKho x : list) {
                SanPham sanPham = x.getSanPham();
                Object[] row = new Object[]{sanPham.getMaSp(), sanPham.getTenSp(), x.getSoLuong()};
                model.addRow(row);
            }
        }
    }
}
