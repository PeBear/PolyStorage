package com.polystorage.view;

import com.polystorage.dao.SanPhamDAOImpl;
import com.polystorage.entity.ChiTietDonNhap;
import com.polystorage.entity.ChiTietDonXuat;
import com.polystorage.entity.SanPham;
import com.polystorage.entity.TongSanPham;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author xPeter
 */
public class PanelTongSanPhamNhapXuat extends javax.swing.JPanel {

    public static PanelTongSanPhamNhapXuat reload;
    private boolean isNhanVien;

    /**
     * Creates new form NewJPanel
     */
    public PanelTongSanPhamNhapXuat(boolean isNhanVien) {
        reload = this;
        this.isNhanVien = isNhanVien;
        initComponents();
        this.setTableUI();
        this.fillToTableSanPhamNhap();
        this.fillToTableSanPhamXuat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlRoot = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPhamNhap = new javax.swing.JTable();
        pnlControl = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPhamXuat = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        pnlRoot.setBackground(new java.awt.Color(35, 124, 196));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("     SẢN PHẨM NHẬP");

        tblSanPhamNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã SP", "Tên Sản Phẩm", "Tổng Số Lượng Nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamNhap.setFocusable(false);
        tblSanPhamNhap.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblSanPhamNhap.setRowHeight(25);
        tblSanPhamNhap.setSelectionBackground(new java.awt.Color(130, 168, 212));
        tblSanPhamNhap.setShowVerticalLines(false);
        tblSanPhamNhap.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblSanPhamNhap);

        javax.swing.GroupLayout pnlRootLayout = new javax.swing.GroupLayout(pnlRoot);
        pnlRoot.setLayout(pnlRootLayout);
        pnlRootLayout.setHorizontalGroup(
            pnlRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlRootLayout.setVerticalGroup(
            pnlRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRootLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sản Phẩm Nhập", pnlRoot);

        pnlControl.setBackground(new java.awt.Color(35, 124, 196));

        lblTitle1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setText("     SẢN PHẨM XUẤT");

        tblSanPhamXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã SP", "Tên Sản Phẩm", "Tổng Số Lượng Xuất"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamXuat.setFocusable(false);
        tblSanPhamXuat.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblSanPhamXuat.setRowHeight(25);
        tblSanPhamXuat.setSelectionBackground(new java.awt.Color(130, 168, 212));
        tblSanPhamXuat.setShowVerticalLines(false);
        tblSanPhamXuat.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblSanPhamXuat);

        javax.swing.GroupLayout pnlControlLayout = new javax.swing.GroupLayout(pnlControl);
        pnlControl.setLayout(pnlControlLayout);
        pnlControlLayout.setHorizontalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        pnlControlLayout.setVerticalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addComponent(lblTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sản Phẩm Xuât", pnlControl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JPanel pnlRoot;
    private javax.swing.JTable tblSanPhamNhap;
    private javax.swing.JTable tblSanPhamXuat;
    // End of variables declaration//GEN-END:variables
    JButton btnUpdate = new JButton();
    List<SanPham> listSP;
    int indexSP = 0;
    SanPhamDAOImpl sanPhamDAOImpl = new SanPhamDAOImpl();

    private void setTableUI() {
        tblSanPhamNhap.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        tblSanPhamNhap.getTableHeader().setOpaque(false);
        //tblNhanVien.getTableHeader().setBackground(new Color(32, 136, 203));
        tblSanPhamNhap.getTableHeader().setBackground(new Color(255, 255, 255));
        tblSanPhamNhap.getTableHeader().setForeground(new Color(0, 0, 0));
        tblSanPhamNhap.setRowHeight(25);

        tblSanPhamXuat.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        tblSanPhamXuat.getTableHeader().setOpaque(false);
        //tblNhanVien.getTableHeader().setBackground(new Color(32, 136, 203));
        tblSanPhamXuat.getTableHeader().setBackground(new Color(255, 255, 255));
        tblSanPhamXuat.getTableHeader().setForeground(new Color(0, 0, 0));
        tblSanPhamXuat.setRowHeight(25);
    }

    public void fillToTableSanPhamNhap() {
        List<SanPham> list = sanPhamDAOImpl.getListSanPham(null);
        ArrayList<TongSanPham> listTongSanPham = new ArrayList<TongSanPham>();
        for (SanPham x : list) {
            Set<ChiTietDonNhap> set = x.getChiTietDonNhaps();
            ArrayList<ChiTietDonNhap> listChiTietDonNhap = new ArrayList<>(set);
            int tongSoLuong = 0;
            for (ChiTietDonNhap y : listChiTietDonNhap) {
                tongSoLuong += y.getSoLuong();
            }
            TongSanPham tongSanPham = new TongSanPham(x, tongSoLuong);
            listTongSanPham.add(tongSanPham);
        }
        listTongSanPham.sort(new Comparator<TongSanPham>() {
            @Override
            public int compare(TongSanPham o1, TongSanPham o2) {
                return o1.getSoLuong().compareTo(o2.getSoLuong());
            }
        });
        Collections.reverse(listTongSanPham);
        if (listTongSanPham != null) {
            DefaultTableModel model = (DefaultTableModel) tblSanPhamNhap.getModel();
            model.setRowCount(0);
            for (TongSanPham x : listTongSanPham) {
                Object[] row = new Object[]{x.getSanPham().getMaSp(), x.getSanPham().getTenSp(), x.getSoLuong()};
                model.addRow(row);
            }
        }
    }
    public void fillToTableSanPhamXuat() {
        List<SanPham> list = sanPhamDAOImpl.getListSanPham(null);
        ArrayList<TongSanPham> listTongSanPham = new ArrayList<TongSanPham>();
        for (SanPham x : list) {
            Set<ChiTietDonXuat> set = x.getChiTietDonXuats();
            ArrayList<ChiTietDonXuat> listChiTietDonXuat = new ArrayList<>(set);
            int tongSoLuong = 0;
            for (ChiTietDonXuat y : listChiTietDonXuat) {
                tongSoLuong += y.getSoLuong();
            }
            TongSanPham tongSanPham = new TongSanPham(x, tongSoLuong);
            listTongSanPham.add(tongSanPham);
        }
        listTongSanPham.sort(new Comparator<TongSanPham>() {
            @Override
            public int compare(TongSanPham o1, TongSanPham o2) {
                return o1.getSoLuong().compareTo(o2.getSoLuong());
            }
        });
        Collections.reverse(listTongSanPham);
        if (listTongSanPham != null) {
            DefaultTableModel model = (DefaultTableModel) tblSanPhamXuat.getModel();
            model.setRowCount(0);
            for (TongSanPham x : listTongSanPham) {
                Object[] row = new Object[]{x.getSanPham().getMaSp(), x.getSanPham().getTenSp(), x.getSoLuong()};
                model.addRow(row);
            }
        }
    }
}
